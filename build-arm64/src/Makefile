# Makefile.in generated by automake 1.18.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2025 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = ../../src
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
am__rm_f = rm -f $(am__rm_f_notfound)
am__rm_rf = rm -rf $(am__rm_f_notfound)
pkgdatadir = $(datadir)/lxdream
pkgincludedir = $(includedir)/lxdream
pkglibdir = $(libdir)/lxdream
pkglibexecdir = $(libexecdir)/lxdream
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-apple-darwin24.6.0
host_triplet = aarch64-apple-darwin24.6.0
bin_PROGRAMS = lxdream$(EXEEXT)
check_PROGRAMS = test/testxlt$(EXEEXT) test/testlxpaths$(EXEEXT) \
	$(am__EXEEXT_1)
libexec_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7)
TESTS = test/testxlt$(EXEEXT) test/testlxpaths$(EXEEXT)
am__append_1 = plugin.c plugin.h
#am__append_2 = sh4/sh4x86.c xlat/x86/x86op.h \
#        xlat/x86/ia32abi.h xlat/x86/amd64abi.h \
#        xlat/xlatdasm.c xlat/xlatdasm.h \
#        sh4/sh4trans.c sh4/sh4trans.h sh4/mmux86.c sh4/shadow.c \
#        xlat/disasm/i386-dis.c xlat/disasm/dis-init.c xlat/disasm/dis-buf.c \
#        xlat/disasm/ansidecl.h xlat/disasm/bfd.h xlat/disasm/dis-asm.h \
#        xlat/disasm/symcat.h xlat/disasm/sysdep.h xlat/disasm/arm-dis.c \
#        xlat/disasm/floatformat.c xlat/disasm/floatformat.h \
#        xlat/disasm/arm.h xlat/disasm/safe-ctype.h xlat/disasm/safe-ctype.c

#am__append_3 = test/testsh4x86
#am__append_4 = gtkui/gtkui.c gtkui/gtkui.h \
#	gtkui/gtk_win.c gtkui/gtkcb.c gtkui/gtk_cfg.c \
#        gtkui/gtk_mmio.c gtkui/gtk_debug.c gtkui/gtk_dump.c \
#        gtkui/gtk_ctrl.c gtkui/gtk_gd.c \
#        drivers/video_gtk.c

#am__append_5 = gui_none.c
#noinst_PROGRAMS = liblxdream.so$(EXEEXT)
am__append_6 = cocoaui/paths_osx.m drivers/io_osx.m drivers/mac_keymap.h drivers/mac_keymap.txt
am__append_7 = cocoaui/cocoaui.m cocoaui/cocoaui.h cocoaui/cocoa_cfg.m \
	cocoaui/cocoa_win.m cocoaui/cocoa_gd.m cocoaui/cocoa_prefs.m \
	cocoaui/cocoa_ctrl.m drivers/video_osx.m drivers/gc_osx.m

#am__append_8 = paths_unix.c drivers/io_glib.c
#am__append_9 = drivers/video_gdk.c
#am__append_10 = drivers/video_glx.c drivers/video_glx.h
am__append_11 = drivers/video_nsgl.m drivers/video_nsgl.h
#am__append_12 = drivers/video_egl.c drivers/video_egl.h
am__append_13 = drivers/audio_osx.m
am__append_14 = lxdream_dummy.dylib
#am__append_15 = audio_sdl.dylib
#am__append_16 = audio_pulse.dylib
#am__append_17 = audio_esd.dylib
#am__append_18 = audio_alsa.dylib
#am__append_19 = input_lirc.dylib
##am__append_20 = drivers/audio_sdl.c
##am__append_21 = 
##am__append_22 = drivers/audio_pulse.c
##am__append_23 = 
##am__append_24 = drivers/audio_esd.c
##am__append_25 = 
##am__append_26 = drivers/audio_alsa.c
##am__append_27 = 
##am__append_28 = drivers/input_lirc.c
##am__append_29 = -llirc_client
#am__append_30 = drivers/cdrom/cd_linux.c
am__append_31 = drivers/cdrom/cd_osx.c drivers/osx_iokit.m drivers/osx_iokit.h
#am__append_32 = drivers/cdrom/cd_none.c
#am__append_33 = drivers/joy_linux.c drivers/joy_linux.h
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/ccforbuild.m4 $(top_srcdir)/m4/android.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)"
#am__EXEEXT_1 = test/testsh4x86$(EXEEXT)
am__EXEEXT_2 = lxdream_dummy.dylib$(EXEEXT)
#am__EXEEXT_3 = audio_sdl.dylib$(EXEEXT)
#am__EXEEXT_4 = audio_pulse.dylib$(EXEEXT)
#am__EXEEXT_5 = audio_esd.dylib$(EXEEXT)
#am__EXEEXT_6 = audio_alsa.dylib$(EXEEXT)
#am__EXEEXT_7 = input_lirc.dylib$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cr
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
liblxdream_core_a_AR = $(AR) $(ARFLAGS)
liblxdream_core_a_RANLIB = $(RANLIB)
liblxdream_core_a_LIBADD =
am__liblxdream_core_a_SOURCES_DIST = version.c config.c config.h \
	lxdream.h dream.h gui.h cpu.c cpu.h hook.h gettext.h mem.c \
	mem.h sdram.c mmio.h watch.c asic.c asic.h clock.h serial.h \
	syscall.c syscall.h bios.c dcload.c gdbserver.c ioutil.c \
	ioutil.h lxpaths.c lxpaths.h gdrom/ide.c gdrom/ide.h \
	gdrom/packet.h gdrom/gdrom.c gdrom/gdrom.h dreamcast.c \
	dreamcast.h eventq.c eventq.h sh4/sh4.c sh4/intc.c sh4/intc.h \
	sh4/sh4mem.c sh4/timer.c sh4/dmac.c sh4/mmu.c sh4/sh4core.c \
	sh4/sh4core.h sh4/sh4dasm.c sh4/sh4dasm.h sh4/sh4mmio.c \
	sh4/sh4mmio.h sh4/scif.c sh4/sh4stat.c sh4/sh4stat.h \
	xlat/xltcache.c xlat/xltcache.h sh4/sh4.h sh4/dmac.h sh4/pmm.c \
	sh4/cache.c sh4/mmu.h aica/armcore.c aica/armcore.h \
	aica/armdasm.c aica/armdasm.h aica/armmem.c aica/aica.c \
	aica/aica.h aica/audio.c aica/audio.h pvr2/pvr2.c pvr2/pvr2.h \
	pvr2/pvr2mem.c pvr2/pvr2mmio.h pvr2/tacore.c pvr2/rendsort.c \
	pvr2/tileiter.h pvr2/shaders.glsl pvr2/texcache.c pvr2/yuv.c \
	pvr2/rendsave.c pvr2/scene.c pvr2/scene.h pvr2/shaders.h \
	pvr2/shaders.def pvr2/glutil.c pvr2/glutil.h pvr2/glrender.c \
	drivers/gl_state.c drivers/gl_state.h maple/maple.c \
	maple/maple.h maple/controller.c maple/kbd.c maple/mouse.c \
	maple/lightgun.c maple/vmu.c loader.c loader.h elf.h \
	bootstrap.c bootstrap.h util.c gdlist.c gdlist.h vmu/vmuvol.c \
	vmu/vmuvol.h vmu/vmulist.c vmu/vmulist.h display.c display.h \
	dckeysyms.h drivers/audio_null.c drivers/video_null.c \
	drivers/video_gl.c drivers/video_gl.h drivers/gl_fbo.c \
	drivers/gl_vbo.c drivers/gl_sl.c drivers/serial_unix.c \
	drivers/cdrom/cdrom.h drivers/cdrom/cdrom.c \
	drivers/cdrom/drive.h drivers/cdrom/sector.h \
	drivers/cdrom/sector.c drivers/cdrom/defs.h \
	drivers/cdrom/cd_nrg.c drivers/cdrom/cd_cdi.c \
	drivers/cdrom/cd_gdi.c drivers/cdrom/edc_ecc.c \
	drivers/cdrom/ecc.h drivers/cdrom/drive.c \
	drivers/cdrom/edc_crctable.h drivers/cdrom/edc_encoder.h \
	drivers/cdrom/cdimpl.h drivers/cdrom/edc_l2sq.h \
	drivers/cdrom/edc_scramble.h drivers/cdrom/cd_mmc.c \
	drivers/cdrom/isofs.h drivers/cdrom/isofs.c \
	drivers/cdrom/isomem.c sh4/sh4.def sh4/sh4core.in \
	sh4/sh4x86.in sh4/sh4dasm.in sh4/sh4stat.in hotkeys.c \
	hotkeys.h profiler.c profiler.h sh4/sh4x86.c xlat/x86/x86op.h \
	xlat/x86/ia32abi.h xlat/x86/amd64abi.h xlat/xlatdasm.c \
	xlat/xlatdasm.h sh4/sh4trans.c sh4/sh4trans.h sh4/mmux86.c \
	sh4/shadow.c xlat/disasm/i386-dis.c xlat/disasm/dis-init.c \
	xlat/disasm/dis-buf.c xlat/disasm/ansidecl.h xlat/disasm/bfd.h \
	xlat/disasm/dis-asm.h xlat/disasm/symcat.h \
	xlat/disasm/sysdep.h xlat/disasm/arm-dis.c \
	xlat/disasm/floatformat.c xlat/disasm/floatformat.h \
	xlat/disasm/arm.h xlat/disasm/safe-ctype.h \
	xlat/disasm/safe-ctype.c cocoaui/paths_osx.m drivers/io_osx.m \
	drivers/mac_keymap.h drivers/mac_keymap.txt paths_unix.c \
	drivers/io_glib.c
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = sh4/sh4x86.$(OBJEXT) \
#	xlat/xlatdasm.$(OBJEXT) \
#	sh4/sh4trans.$(OBJEXT) sh4/mmux86.$(OBJEXT) \
#	sh4/shadow.$(OBJEXT) \
#	xlat/disasm/i386-dis.$(OBJEXT) \
#	xlat/disasm/dis-init.$(OBJEXT) \
#	xlat/disasm/dis-buf.$(OBJEXT) \
#	xlat/disasm/arm-dis.$(OBJEXT) \
#	xlat/disasm/floatformat.$(OBJEXT) \
#	xlat/disasm/safe-ctype.$(OBJEXT)
am__objects_2 = cocoaui/paths_osx.$(OBJEXT) \
	drivers/io_osx.$(OBJEXT)
#am__objects_3 = paths_unix.$(OBJEXT) \
#	drivers/io_glib.$(OBJEXT)
am_liblxdream_core_a_OBJECTS = version.$(OBJEXT) config.$(OBJEXT) \
	cpu.$(OBJEXT) mem.$(OBJEXT) sdram.$(OBJEXT) watch.$(OBJEXT) \
	asic.$(OBJEXT) syscall.$(OBJEXT) bios.$(OBJEXT) \
	dcload.$(OBJEXT) gdbserver.$(OBJEXT) ioutil.$(OBJEXT) \
	lxpaths.$(OBJEXT) gdrom/ide.$(OBJEXT) gdrom/gdrom.$(OBJEXT) \
	dreamcast.$(OBJEXT) eventq.$(OBJEXT) sh4/sh4.$(OBJEXT) \
	sh4/intc.$(OBJEXT) sh4/sh4mem.$(OBJEXT) sh4/timer.$(OBJEXT) \
	sh4/dmac.$(OBJEXT) sh4/mmu.$(OBJEXT) sh4/sh4core.$(OBJEXT) \
	sh4/sh4dasm.$(OBJEXT) sh4/sh4mmio.$(OBJEXT) sh4/scif.$(OBJEXT) \
	sh4/sh4stat.$(OBJEXT) xlat/xltcache.$(OBJEXT) \
	sh4/pmm.$(OBJEXT) sh4/cache.$(OBJEXT) aica/armcore.$(OBJEXT) \
	aica/armdasm.$(OBJEXT) aica/armmem.$(OBJEXT) \
	aica/aica.$(OBJEXT) aica/audio.$(OBJEXT) pvr2/pvr2.$(OBJEXT) \
	pvr2/pvr2mem.$(OBJEXT) pvr2/tacore.$(OBJEXT) \
	pvr2/rendsort.$(OBJEXT) pvr2/texcache.$(OBJEXT) \
	pvr2/yuv.$(OBJEXT) pvr2/rendsave.$(OBJEXT) \
	pvr2/scene.$(OBJEXT) pvr2/glutil.$(OBJEXT) \
	pvr2/glrender.$(OBJEXT) drivers/gl_state.$(OBJEXT) \
	maple/maple.$(OBJEXT) maple/controller.$(OBJEXT) \
	maple/kbd.$(OBJEXT) maple/mouse.$(OBJEXT) \
	maple/lightgun.$(OBJEXT) maple/vmu.$(OBJEXT) loader.$(OBJEXT) \
	bootstrap.$(OBJEXT) util.$(OBJEXT) gdlist.$(OBJEXT) \
	vmu/vmuvol.$(OBJEXT) vmu/vmulist.$(OBJEXT) display.$(OBJEXT) \
	drivers/audio_null.$(OBJEXT) drivers/video_null.$(OBJEXT) \
	drivers/video_gl.$(OBJEXT) drivers/gl_fbo.$(OBJEXT) \
	drivers/gl_vbo.$(OBJEXT) drivers/gl_sl.$(OBJEXT) \
	drivers/serial_unix.$(OBJEXT) drivers/cdrom/cdrom.$(OBJEXT) \
	drivers/cdrom/sector.$(OBJEXT) drivers/cdrom/cd_nrg.$(OBJEXT) \
	drivers/cdrom/cd_cdi.$(OBJEXT) drivers/cdrom/cd_gdi.$(OBJEXT) \
	drivers/cdrom/edc_ecc.$(OBJEXT) drivers/cdrom/drive.$(OBJEXT) \
	drivers/cdrom/cd_mmc.$(OBJEXT) drivers/cdrom/isofs.$(OBJEXT) \
	drivers/cdrom/isomem.$(OBJEXT) hotkeys.$(OBJEXT) \
	profiler.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
liblxdream_core_a_OBJECTS = $(am_liblxdream_core_a_OBJECTS)
am_audio_alsa_dylib_OBJECTS =
audio_alsa_dylib_OBJECTS = $(am_audio_alsa_dylib_OBJECTS)
#audio_alsa_dylib_DEPENDENCIES =  \
#	audio_alsa.lo
audio_alsa_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(audio_alsa_dylib_LDFLAGS) $(LDFLAGS) -o $@
am_audio_esd_dylib_OBJECTS =
audio_esd_dylib_OBJECTS = $(am_audio_esd_dylib_OBJECTS)
#audio_esd_dylib_DEPENDENCIES =  \
#	audio_esd.lo
audio_esd_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(audio_esd_dylib_LDFLAGS) $(LDFLAGS) -o $@
am_audio_pulse_dylib_OBJECTS =
audio_pulse_dylib_OBJECTS = $(am_audio_pulse_dylib_OBJECTS)
#audio_pulse_dylib_DEPENDENCIES =  \
#	audio_pulse.lo
audio_pulse_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(audio_pulse_dylib_LDFLAGS) $(LDFLAGS) -o $@
am_audio_sdl_dylib_OBJECTS =
audio_sdl_dylib_OBJECTS = $(am_audio_sdl_dylib_OBJECTS)
#audio_sdl_dylib_DEPENDENCIES =  \
#	audio_sdl.lo
audio_sdl_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(audio_sdl_dylib_LDFLAGS) $(LDFLAGS) -o $@
am_input_lirc_dylib_OBJECTS =
input_lirc_dylib_OBJECTS = $(am_input_lirc_dylib_OBJECTS)
#input_lirc_dylib_DEPENDENCIES =  \
#	input_lirc.lo
input_lirc_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(input_lirc_dylib_LDFLAGS) $(LDFLAGS) -o $@
am__liblxdream_so_SOURCES_DIST = gui_android.c drivers/cdrom/cd_none.c \
	drivers/video_egl.c drivers/video_egl.h tqueue.c tqueue.h
#am_liblxdream_so_OBJECTS = gui_android.$(OBJEXT) \
#	drivers/cdrom/cd_none.$(OBJEXT) \
#	drivers/video_egl.$(OBJEXT) tqueue.$(OBJEXT)
liblxdream_so_OBJECTS = $(am_liblxdream_so_OBJECTS)
am__DEPENDENCIES_1 =
#liblxdream_so_DEPENDENCIES = liblxdream-core.a \
#	$(am__DEPENDENCIES_1)
am__lxdream_SOURCES_DIST = main.c plugin.c plugin.h gtkui/gtkui.c \
	gtkui/gtkui.h gtkui/gtk_win.c gtkui/gtkcb.c gtkui/gtk_cfg.c \
	gtkui/gtk_mmio.c gtkui/gtk_debug.c gtkui/gtk_dump.c \
	gtkui/gtk_ctrl.c gtkui/gtk_gd.c drivers/video_gtk.c gui_none.c \
	cocoaui/cocoaui.m cocoaui/cocoaui.h cocoaui/cocoa_cfg.m \
	cocoaui/cocoa_win.m cocoaui/cocoa_gd.m cocoaui/cocoa_prefs.m \
	cocoaui/cocoa_ctrl.m drivers/video_osx.m drivers/gc_osx.m \
	drivers/video_gdk.c drivers/video_glx.c drivers/video_glx.h \
	drivers/video_nsgl.m drivers/video_nsgl.h drivers/video_egl.c \
	drivers/video_egl.h drivers/audio_osx.m drivers/audio_sdl.c \
	drivers/audio_pulse.c drivers/audio_esd.c drivers/audio_alsa.c \
	drivers/input_lirc.c drivers/cdrom/cd_linux.c \
	drivers/cdrom/cd_osx.c drivers/osx_iokit.m drivers/osx_iokit.h \
	drivers/cdrom/cd_none.c drivers/joy_linux.c \
	drivers/joy_linux.h
am__objects_4 = plugin.$(OBJEXT)
#am__objects_5 = gtkui/gtkui.$(OBJEXT) \
#	gtkui/gtk_win.$(OBJEXT) gtkui/gtkcb.$(OBJEXT) \
#	gtkui/gtk_cfg.$(OBJEXT) gtkui/gtk_mmio.$(OBJEXT) \
#	gtkui/gtk_debug.$(OBJEXT) \
#	gtkui/gtk_dump.$(OBJEXT) \
#	gtkui/gtk_ctrl.$(OBJEXT) gtkui/gtk_gd.$(OBJEXT) \
#	drivers/video_gtk.$(OBJEXT)
#am__objects_6 = gui_none.$(OBJEXT)
am__objects_7 = cocoaui/cocoaui.$(OBJEXT) \
	cocoaui/cocoa_cfg.$(OBJEXT) \
	cocoaui/cocoa_win.$(OBJEXT) \
	cocoaui/cocoa_gd.$(OBJEXT) \
	cocoaui/cocoa_prefs.$(OBJEXT) \
	cocoaui/cocoa_ctrl.$(OBJEXT) \
	drivers/video_osx.$(OBJEXT) \
	drivers/gc_osx.$(OBJEXT)
#am__objects_8 = drivers/video_gdk.$(OBJEXT)
#am__objects_9 = drivers/video_glx.$(OBJEXT)
am__objects_10 = drivers/video_nsgl.$(OBJEXT)
#am__objects_11 = drivers/video_egl.$(OBJEXT)
am__objects_12 = drivers/audio_osx.$(OBJEXT)
##am__objects_13 = drivers/audio_sdl.$(OBJEXT)
##am__objects_14 = drivers/audio_pulse.$(OBJEXT)
##am__objects_15 = drivers/audio_esd.$(OBJEXT)
##am__objects_16 = drivers/audio_alsa.$(OBJEXT)
##am__objects_17 = drivers/input_lirc.$(OBJEXT)
#am__objects_18 = drivers/cdrom/cd_linux.$(OBJEXT)
am__objects_19 = drivers/cdrom/cd_osx.$(OBJEXT) \
	drivers/osx_iokit.$(OBJEXT)
#am__objects_20 = drivers/cdrom/cd_none.$(OBJEXT)
#am__objects_21 = drivers/joy_linux.$(OBJEXT)
am_lxdream_OBJECTS = main.$(OBJEXT) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16) $(am__objects_17) \
	$(am__objects_18) $(am__objects_19) $(am__objects_20) \
	$(am__objects_21)
lxdream_OBJECTS = $(am_lxdream_OBJECTS)
lxdream_DEPENDENCIES = liblxdream-core.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_lxdream_dummy_dylib_OBJECTS =
lxdream_dummy_dylib_OBJECTS = $(am_lxdream_dummy_dylib_OBJECTS)
lxdream_dummy_dylib_DEPENDENCIES =  \
	lxdream_dummy.lo
lxdream_dummy_dylib_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(lxdream_dummy_dylib_LDFLAGS) $(LDFLAGS) -o $@
am_test_testlxpaths_OBJECTS = test/testlxpaths.$(OBJEXT) \
	lxpaths.$(OBJEXT)
test_testlxpaths_OBJECTS = $(am_test_testlxpaths_OBJECTS)
test_testlxpaths_DEPENDENCIES =
am__test_testsh4x86_SOURCES_DIST = test/testsh4x86.c xlat/xlatdasm.c \
	xlat/xlatdasm.h xlat/disasm/i386-dis.c xlat/disasm/dis-init.c \
	xlat/disasm/dis-buf.c xlat/disasm/arm-dis.c xlat/disasm/arm.h \
	xlat/disasm/safe-ctype.h xlat/disasm/safe-ctype.c \
	xlat/disasm/floatformat.c xlat/disasm/floatformat.h \
	sh4/sh4trans.c sh4/sh4x86.c xlat/xltcache.c sh4/sh4dasm.c \
	xlat/xltcache.h mem.c util.c cpu.c
#am_test_testsh4x86_OBJECTS =  \
#	test/testsh4x86.$(OBJEXT) \
#	xlat/xlatdasm.$(OBJEXT) \
#	xlat/disasm/i386-dis.$(OBJEXT) \
#	xlat/disasm/dis-init.$(OBJEXT) \
#	xlat/disasm/dis-buf.$(OBJEXT) \
#	xlat/disasm/arm-dis.$(OBJEXT) \
#	xlat/disasm/safe-ctype.$(OBJEXT) \
#	xlat/disasm/floatformat.$(OBJEXT) \
#	sh4/sh4trans.$(OBJEXT) sh4/sh4x86.$(OBJEXT) \
#	xlat/xltcache.$(OBJEXT) \
#	sh4/sh4dasm.$(OBJEXT) mem.$(OBJEXT) \
#	util.$(OBJEXT) cpu.$(OBJEXT)
test_testsh4x86_OBJECTS = $(am_test_testsh4x86_OBJECTS)
test_testsh4x86_DEPENDENCIES =
am_test_testxlt_OBJECTS = test/testxlt.$(OBJEXT) \
	xlat/xltcache.$(OBJEXT)
test_testxlt_OBJECTS = $(am_test_testxlt_OBJECTS)
test_testxlt_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/asic.Po ./$(DEPDIR)/bios.Po \
	./$(DEPDIR)/bootstrap.Po ./$(DEPDIR)/config.Po \
	./$(DEPDIR)/cpu.Po ./$(DEPDIR)/dcload.Po \
	./$(DEPDIR)/display.Po ./$(DEPDIR)/dreamcast.Po \
	./$(DEPDIR)/eventq.Po ./$(DEPDIR)/gdbserver.Po \
	./$(DEPDIR)/gdlist.Po ./$(DEPDIR)/gui_android.Po \
	./$(DEPDIR)/gui_none.Po ./$(DEPDIR)/hotkeys.Po \
	./$(DEPDIR)/ioutil.Po ./$(DEPDIR)/loader.Po \
	./$(DEPDIR)/lxpaths.Po ./$(DEPDIR)/main.Po ./$(DEPDIR)/mem.Po \
	./$(DEPDIR)/paths_unix.Po ./$(DEPDIR)/plugin.Po \
	./$(DEPDIR)/profiler.Po ./$(DEPDIR)/sdram.Po \
	./$(DEPDIR)/syscall.Po ./$(DEPDIR)/tqueue.Po \
	./$(DEPDIR)/util.Po ./$(DEPDIR)/version.Po \
	./$(DEPDIR)/watch.Po aica/$(DEPDIR)/aica.Po \
	aica/$(DEPDIR)/armcore.Po aica/$(DEPDIR)/armdasm.Po \
	aica/$(DEPDIR)/armmem.Po aica/$(DEPDIR)/audio.Po \
	cocoaui/$(DEPDIR)/cocoa_cfg.Po cocoaui/$(DEPDIR)/cocoa_ctrl.Po \
	cocoaui/$(DEPDIR)/cocoa_gd.Po cocoaui/$(DEPDIR)/cocoa_prefs.Po \
	cocoaui/$(DEPDIR)/cocoa_win.Po cocoaui/$(DEPDIR)/cocoaui.Po \
	cocoaui/$(DEPDIR)/paths_osx.Po drivers/$(DEPDIR)/audio_alsa.Po \
	drivers/$(DEPDIR)/audio_esd.Po drivers/$(DEPDIR)/audio_null.Po \
	drivers/$(DEPDIR)/audio_osx.Po \
	drivers/$(DEPDIR)/audio_pulse.Po \
	drivers/$(DEPDIR)/audio_sdl.Po drivers/$(DEPDIR)/gc_osx.Po \
	drivers/$(DEPDIR)/gl_fbo.Po drivers/$(DEPDIR)/gl_sl.Po \
	drivers/$(DEPDIR)/gl_state.Po drivers/$(DEPDIR)/gl_vbo.Po \
	drivers/$(DEPDIR)/input_lirc.Po drivers/$(DEPDIR)/io_glib.Po \
	drivers/$(DEPDIR)/io_osx.Po drivers/$(DEPDIR)/joy_linux.Po \
	drivers/$(DEPDIR)/osx_iokit.Po \
	drivers/$(DEPDIR)/serial_unix.Po \
	drivers/$(DEPDIR)/video_egl.Po drivers/$(DEPDIR)/video_gdk.Po \
	drivers/$(DEPDIR)/video_gl.Po drivers/$(DEPDIR)/video_glx.Po \
	drivers/$(DEPDIR)/video_gtk.Po drivers/$(DEPDIR)/video_nsgl.Po \
	drivers/$(DEPDIR)/video_null.Po drivers/$(DEPDIR)/video_osx.Po \
	drivers/cdrom/$(DEPDIR)/cd_cdi.Po \
	drivers/cdrom/$(DEPDIR)/cd_gdi.Po \
	drivers/cdrom/$(DEPDIR)/cd_linux.Po \
	drivers/cdrom/$(DEPDIR)/cd_mmc.Po \
	drivers/cdrom/$(DEPDIR)/cd_none.Po \
	drivers/cdrom/$(DEPDIR)/cd_nrg.Po \
	drivers/cdrom/$(DEPDIR)/cd_osx.Po \
	drivers/cdrom/$(DEPDIR)/cdrom.Po \
	drivers/cdrom/$(DEPDIR)/drive.Po \
	drivers/cdrom/$(DEPDIR)/edc_ecc.Po \
	drivers/cdrom/$(DEPDIR)/isofs.Po \
	drivers/cdrom/$(DEPDIR)/isomem.Po \
	drivers/cdrom/$(DEPDIR)/sector.Po gdrom/$(DEPDIR)/gdrom.Po \
	gdrom/$(DEPDIR)/ide.Po gtkui/$(DEPDIR)/gtk_cfg.Po \
	gtkui/$(DEPDIR)/gtk_ctrl.Po gtkui/$(DEPDIR)/gtk_debug.Po \
	gtkui/$(DEPDIR)/gtk_dump.Po gtkui/$(DEPDIR)/gtk_gd.Po \
	gtkui/$(DEPDIR)/gtk_mmio.Po gtkui/$(DEPDIR)/gtk_win.Po \
	gtkui/$(DEPDIR)/gtkcb.Po gtkui/$(DEPDIR)/gtkui.Po \
	maple/$(DEPDIR)/controller.Po maple/$(DEPDIR)/kbd.Po \
	maple/$(DEPDIR)/lightgun.Po maple/$(DEPDIR)/maple.Po \
	maple/$(DEPDIR)/mouse.Po maple/$(DEPDIR)/vmu.Po \
	pvr2/$(DEPDIR)/glrender.Po pvr2/$(DEPDIR)/glutil.Po \
	pvr2/$(DEPDIR)/pvr2.Po pvr2/$(DEPDIR)/pvr2mem.Po \
	pvr2/$(DEPDIR)/rendsave.Po pvr2/$(DEPDIR)/rendsort.Po \
	pvr2/$(DEPDIR)/scene.Po pvr2/$(DEPDIR)/tacore.Po \
	pvr2/$(DEPDIR)/texcache.Po pvr2/$(DEPDIR)/yuv.Po \
	sh4/$(DEPDIR)/cache.Po sh4/$(DEPDIR)/dmac.Po \
	sh4/$(DEPDIR)/intc.Po sh4/$(DEPDIR)/mmu.Po \
	sh4/$(DEPDIR)/mmux86.Po sh4/$(DEPDIR)/pmm.Po \
	sh4/$(DEPDIR)/scif.Po sh4/$(DEPDIR)/sh4.Po \
	sh4/$(DEPDIR)/sh4core.Po sh4/$(DEPDIR)/sh4dasm.Po \
	sh4/$(DEPDIR)/sh4mem.Po sh4/$(DEPDIR)/sh4mmio.Po \
	sh4/$(DEPDIR)/sh4stat.Po sh4/$(DEPDIR)/sh4trans.Po \
	sh4/$(DEPDIR)/sh4x86.Po sh4/$(DEPDIR)/shadow.Po \
	sh4/$(DEPDIR)/timer.Po test/$(DEPDIR)/testlxpaths.Po \
	test/$(DEPDIR)/testsh4x86.Po test/$(DEPDIR)/testxlt.Po \
	vmu/$(DEPDIR)/vmulist.Po vmu/$(DEPDIR)/vmuvol.Po \
	xlat/$(DEPDIR)/xlatdasm.Po xlat/$(DEPDIR)/xltcache.Po \
	xlat/disasm/$(DEPDIR)/arm-dis.Po \
	xlat/disasm/$(DEPDIR)/dis-buf.Po \
	xlat/disasm/$(DEPDIR)/dis-init.Po \
	xlat/disasm/$(DEPDIR)/floatformat.Po \
	xlat/disasm/$(DEPDIR)/i386-dis.Po \
	xlat/disasm/$(DEPDIR)/safe-ctype.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC    " $@;
am__v_OBJC_1 = 
OBJCLD = $(OBJC)
OBJCLINK = $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
am__v_OBJCLD_1 = 
SOURCES = $(liblxdream_core_a_SOURCES) $(audio_alsa_dylib_SOURCES) \
	$(audio_esd_dylib_SOURCES) $(audio_pulse_dylib_SOURCES) \
	$(audio_sdl_dylib_SOURCES) $(input_lirc_dylib_SOURCES) \
	$(liblxdream_so_SOURCES) $(lxdream_SOURCES) \
	$(lxdream_dummy_dylib_SOURCES) $(test_testlxpaths_SOURCES) \
	$(test_testsh4x86_SOURCES) $(test_testxlt_SOURCES)
DIST_SOURCES = $(am__liblxdream_core_a_SOURCES_DIST) \
	$(audio_alsa_dylib_SOURCES) $(audio_esd_dylib_SOURCES) \
	$(audio_pulse_dylib_SOURCES) $(audio_sdl_dylib_SOURCES) \
	$(input_lirc_dylib_SOURCES) \
	$(am__liblxdream_so_SOURCES_DIST) $(am__lxdream_SOURCES_DIST) \
	$(lxdream_dummy_dylib_SOURCES) $(test_testlxpaths_SOURCES) \
	$(am__test_testsh4x86_SOURCES_DIST) $(test_testxlt_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
  || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
       $(am__cd) "$$dir" && echo $$files | $(am__xargs_n) 40 $(am__rm_f); }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  $$am__collect_skipped_logs \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer-defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(IGNORE_SKIPPED_LOGS)'; then		\
  am__collect_skipped_logs='--collect-skipped-logs no';	\
else							\
  am__collect_skipped_logs='';				\
fi;							\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/Users/richard/Dev/lxdream-arm64-macos/missing' aclocal-1.18
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ANDROID_ABI = armeabi-v7a
ANDROID_GDBSERVER = 
ANDROID_NDK_HOME = 
ANDROID_NDK_VERSION = 
ANDROID_SDK_HOME = 
ANDROID_SDK_VERSION = 
ANT = 
ARMCC = 
ARMLD = 
ARMOBJCOPY = 
AUTOCONF = ${SHELL} '/Users/richard/Dev/lxdream-arm64-macos/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/richard/Dev/lxdream-arm64-macos/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/richard/Dev/lxdream-arm64-macos/missing' automake-1.18
AWK = awk
BUILD_EXEEXT = 
BUILD_OBJEXT = 
CATALOGS = 
CATOBJEXT = NONE
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -fexceptions -D_POSIX_C_SOURCE=200809L -g -fexceptions -D_POSIX_C_SOURCE=200809L -O2 -fomit-frame-pointer -DGL_SILENCE_DEPRECATION -std=c99
CFLAGS_FOR_BUILD = -O2 -std=c99 -D_POSIX_C_SOURCE=200809L
CPP = gcc -E
CPPFLAGS =  -D_DARWIN_C_SOURCE
CPPFLAGS_FOR_BUILD = 
CPP_FOR_BUILD = gcc -E
CSCOPE = cscope
CTAGS = ctags
CYGPATH_W = echo
DATADIRNAME = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ESOUND_CFLAGS = 
ESOUND_LIBS = 
ETAGS = etags
EXEEXT = 
GETTEXT_PACKAGE = lxdream
GLIB_CFLAGS = -I/opt/homebrew/Cellar/glib/2.84.4/include/glib-2.0 -I/opt/homebrew/Cellar/glib/2.84.4/lib/glib-2.0/include -I/opt/homebrew/opt/gettext/include -I/opt/homebrew/Cellar/pcre2/10.45/include
GLIB_FOR_BUILD_CFLAGS = -I/opt/homebrew/Cellar/glib/2.84.4/include/glib-2.0 -I/opt/homebrew/Cellar/glib/2.84.4/lib/glib-2.0/include -I/opt/homebrew/opt/gettext/include -I/opt/homebrew/Cellar/pcre2/10.45/include
GLIB_FOR_BUILD_LIBS = -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl
GLIB_LIBS = -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl
GMOFILES =  de.gmo es.gmo it.gmo nl.gmo pt_BR.gmo
GMSGFMT = 
GREP = /usr/bin/grep
GTK_CFLAGS = 
GTK_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = 
INTLLIBS = 
INTL_MACOSX_LIBS = -Wl,-framework -Wl,CoreFoundation
LDFLAGS =  -Wl,-headerpad_max_install_names
LDFLAGS_FOR_BUILD = 
LIBGL_CFLAGS = 
LIBGL_LIBS = 
LIBISOFS_CFLAGS = -I/usr/local/Cellar/libisofs/1.5.6/include/libisofs
LIBISOFS_LIBS = -L/usr/local/Cellar/libisofs/1.5.6/lib -lisofs
LIBOBJS = 
LIBPNG_CFLAGS = -I/opt/homebrew/opt/libpng/include/libpng16
LIBPNG_LIBS = -L/opt/homebrew/opt/libpng/lib -lpng16
LIBS = 
LTLIBOBJS = 
LXDREAMCPPFLAGS = -DMAC_OS_X_VERSION_MIN_REQUIRED=MAC_OS_X_VERSION_10_4 -mdynamic-no-pic
LXDREAMLDFLAGS = -rdynamic
LXDREAM_LIBS = -lm -lz  -framework AppKit -framework Carbon -framework OpenGL -framework CoreVideo -framework GameController -framework Accelerate -framework CoreAudio -framework IOKit
MAINT = #
MAKEINFO = ${SHELL} '/Users/richard/Dev/lxdream-arm64-macos/missing' makeinfo
MKDIR_P = mkdir -p
MKINSTALLDIRS = ..//mkinstalldirs
MSGFMT = 
MSGFMT_OPTS = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -g -fexceptions -D_POSIX_C_SOURCE=200809L -O2 -fomit-frame-pointer -DGL_SILENCE_DEPRECATION
OBJEXT = o
PACKAGE = lxdream
PACKAGE_BUGREPORT = 
PACKAGE_NAME = lxdream
PACKAGE_STRING = lxdream 0.1
PACKAGE_TARNAME = lxdream
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PKG_CONFIG = /opt/homebrew/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /opt/homebrew/lib/pkgconfig
PLUGINCFLAGS = -fPIC 
PLUGINLDFLAGS = -dynamiclib -undefined dynamic_lookup
POD2HTML = /usr/bin/pod2html
POD2MAN = /usr/bin/pod2man
POFILES =  de.po es.po it.po nl.po pt_BR.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PULSE_CFLAGS = 
PULSE_LIBS = 
RANLIB = ranlib
SDL_CFLAGS = 
SDL_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHCC = 
SHELL = /bin/sh
SHLD = 
SHOBJCOPY = 
SOEXT = dylib
STRIP = 
USE_NLS = yes
VERSION = 0.1
XGETTEXT = :
abs_builddir = /Users/richard/Dev/lxdream-arm64-macos/build-arm64/src
abs_srcdir = /Users/richard/Dev/lxdream-arm64-macos/build-arm64/../src
abs_top_builddir = /Users/richard/Dev/lxdream-arm64-macos/build-arm64
abs_top_srcdir = /Users/richard/Dev/lxdream-arm64-macos/build-arm64/..
ac_ct_CC = gcc
ac_ct_CC_FOR_BUILD = gcc
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__rm_f_notfound = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
am__xargs_n = xargs -n
bindir = ${exec_prefix}/bin
build = aarch64-apple-darwin24.6.0
build_alias = 
build_cpu = aarch64
build_os = darwin24.6.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-apple-darwin24.6.0
host_alias = 
host_cpu = aarch64
host_os = darwin24.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/richard/Dev/lxdream-arm64-macos/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../src
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..
SUBDIRS = tools
SVNVERSION = @SVNVERSION@
AM_CPPFLAGS = -DMAC_OS_X_VERSION_MIN_REQUIRED=MAC_OS_X_VERSION_10_4 -mdynamic-no-pic \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-DPACKAGE_PLUGIN_DIR=\""$(libexecdir)"\" \
	-DPACKAGE_CONF_DIR=\""$(sysconfdir)"\" \
        -Ish4 \
	-I/opt/homebrew/Cellar/glib/2.84.4/include/glib-2.0 -I/opt/homebrew/Cellar/glib/2.84.4/lib/glib-2.0/include -I/opt/homebrew/opt/gettext/include -I/opt/homebrew/Cellar/pcre2/10.45/include  -I/opt/homebrew/opt/libpng/include/libpng16     -I/usr/local/Cellar/libisofs/1.5.6/include/libisofs

EXTRA_DIST = drivers/genkeymap.pl checkver.pl drivers/dummy.c
AM_CFLAGS = -D__EXTENSIONS__ -D_GNU_SOURCE
BUILT_SOURCES = sh4/sh4core.c sh4/sh4dasm.c sh4/sh4x86.c sh4/sh4stat.c \
	pvr2/shaders.def pvr2/shaders.h drivers/mac_keymap.h version.c

CLEANFILES = sh4/sh4core.c sh4/sh4dasm.c sh4/sh4x86.c sh4/sh4stat.c \
	pvr2/shaders.def pvr2/shaders.h drivers/mac_keymap.h version.c  \
	audio_alsa.lo audio_sdl.lo audio_esd.lo audio_pulse.lo input_lirc.lo \
	lxdream_dummy.lo

lxdream_LINK = $(LINK) -rdynamic
lxdream_LDADD = liblxdream-core.a -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl  -L/opt/homebrew/opt/libpng/lib -lpng16 \
	-L/usr/local/Cellar/libisofs/1.5.6/lib -lisofs $(INTLLIBS) -lm -lz  -framework AppKit -framework Carbon -framework OpenGL -framework CoreVideo -framework GameController -framework Accelerate -framework CoreAudio -framework IOKit $(am__append_21) \
	$(am__append_23) $(am__append_25) $(am__append_27) \
	$(am__append_29)
lxdream_SOURCES = main.c $(am__append_1) $(am__append_4) \
	$(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_10) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_20) $(am__append_22) \
	$(am__append_24) $(am__append_26) $(am__append_28) \
	$(am__append_30) $(am__append_31) $(am__append_32) \
	$(am__append_33)
lxdream_LIBS = liblxdream-core.a
noinst_LIBRARIES = liblxdream-core.a
liblxdream_core_a_SOURCES = version.c config.c config.h lxdream.h \
	dream.h gui.h cpu.c cpu.h hook.h gettext.h mem.c mem.h sdram.c \
	mmio.h watch.c asic.c asic.h clock.h serial.h syscall.c \
	syscall.h bios.c dcload.c gdbserver.c ioutil.c ioutil.h \
	lxpaths.c lxpaths.h gdrom/ide.c gdrom/ide.h gdrom/packet.h \
	gdrom/gdrom.c gdrom/gdrom.h dreamcast.c dreamcast.h eventq.c \
	eventq.h sh4/sh4.c sh4/intc.c sh4/intc.h sh4/sh4mem.c \
	sh4/timer.c sh4/dmac.c sh4/mmu.c sh4/sh4core.c sh4/sh4core.h \
	sh4/sh4dasm.c sh4/sh4dasm.h sh4/sh4mmio.c sh4/sh4mmio.h \
	sh4/scif.c sh4/sh4stat.c sh4/sh4stat.h xlat/xltcache.c \
	xlat/xltcache.h sh4/sh4.h sh4/dmac.h sh4/pmm.c sh4/cache.c \
	sh4/mmu.h aica/armcore.c aica/armcore.h aica/armdasm.c \
	aica/armdasm.h aica/armmem.c aica/aica.c aica/aica.h \
	aica/audio.c aica/audio.h pvr2/pvr2.c pvr2/pvr2.h \
	pvr2/pvr2mem.c pvr2/pvr2mmio.h pvr2/tacore.c pvr2/rendsort.c \
	pvr2/tileiter.h pvr2/shaders.glsl pvr2/texcache.c pvr2/yuv.c \
	pvr2/rendsave.c pvr2/scene.c pvr2/scene.h pvr2/shaders.h \
	pvr2/shaders.def pvr2/glutil.c pvr2/glutil.h pvr2/glrender.c \
	drivers/gl_state.c drivers/gl_state.h maple/maple.c \
	maple/maple.h maple/controller.c maple/kbd.c maple/mouse.c \
	maple/lightgun.c maple/vmu.c loader.c loader.h elf.h \
	bootstrap.c bootstrap.h util.c gdlist.c gdlist.h vmu/vmuvol.c \
	vmu/vmuvol.h vmu/vmulist.c vmu/vmulist.h display.c display.h \
	dckeysyms.h drivers/audio_null.c drivers/video_null.c \
	drivers/video_gl.c drivers/video_gl.h drivers/gl_fbo.c \
	drivers/gl_vbo.c drivers/gl_sl.c drivers/serial_unix.c \
	drivers/cdrom/cdrom.h drivers/cdrom/cdrom.c \
	drivers/cdrom/drive.h drivers/cdrom/sector.h \
	drivers/cdrom/sector.c drivers/cdrom/defs.h \
	drivers/cdrom/cd_nrg.c drivers/cdrom/cd_cdi.c \
	drivers/cdrom/cd_gdi.c drivers/cdrom/edc_ecc.c \
	drivers/cdrom/ecc.h drivers/cdrom/drive.c \
	drivers/cdrom/edc_crctable.h drivers/cdrom/edc_encoder.h \
	drivers/cdrom/cdimpl.h drivers/cdrom/edc_l2sq.h \
	drivers/cdrom/edc_scramble.h drivers/cdrom/cd_mmc.c \
	drivers/cdrom/isofs.h drivers/cdrom/isofs.c \
	drivers/cdrom/isomem.c sh4/sh4.def sh4/sh4core.in \
	sh4/sh4x86.in sh4/sh4dasm.in sh4/sh4stat.in hotkeys.c \
	hotkeys.h profiler.c profiler.h $(am__append_2) \
	$(am__append_6) $(am__append_8)
#test_testsh4x86_LDADD = -lm -lz  -framework AppKit -framework Carbon -framework OpenGL -framework CoreVideo -framework GameController -framework Accelerate -framework CoreAudio -framework IOKit -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl  -L/opt/homebrew/opt/libpng/lib -lpng16
#test_testsh4x86_SOURCES = test/testsh4x86.c xlat/xlatdasm.c \
#	xlat/xlatdasm.h xlat/disasm/i386-dis.c xlat/disasm/dis-init.c \
#	xlat/disasm/dis-buf.c xlat/disasm/arm-dis.c \
#        xlat/disasm/arm.h xlat/disasm/safe-ctype.h xlat/disasm/safe-ctype.c \
#        xlat/disasm/floatformat.c xlat/disasm/floatformat.h \
#	sh4/sh4trans.c sh4/sh4x86.c xlat/xltcache.c sh4/sh4dasm.c \
#	xlat/xltcache.h mem.c util.c cpu.c

#liblxdream_so_LINK = $(LINK) -Wl,-soname,liblxdream.so -shared
#liblxdream_so_LDADD = liblxdream-core.a -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl  -L/opt/homebrew/opt/libpng/lib -lpng16 -L/usr/local/Cellar/libisofs/1.5.6/lib -lisofs $(INTLLIBS) -lm -lz  -framework AppKit -framework Carbon -framework OpenGL -framework CoreVideo -framework GameController -framework Accelerate -framework CoreAudio -framework IOKit -lm
#liblxdream_so_SOURCES = gui_android.c drivers/cdrom/cd_none.c drivers/video_egl.c drivers/video_egl.h tqueue.c tqueue.h
#liblxdream_so_LIBS = liblxdream-core.a
lxdream_dummy_dylib_SOURCES = 
lxdream_dummy_dylib_LDADD = lxdream_dummy.lo 
lxdream_dummy_dylib_LDFLAGS = $(PLUGINLDFLAGS)
#audio_sdl_dylib_SOURCES = 
#audio_sdl_dylib_LDADD = audio_sdl.lo 
#audio_sdl_dylib_LDFLAGS = $(PLUGINLDFLAGS)
#audio_pulse_dylib_SOURCES = 
#audio_pulse_dylib_LDADD = audio_pulse.lo 
#audio_pulse_dylib_LDFLAGS = $(PLUGINLDFLAGS)
#audio_esd_dylib_SOURCES = 
#audio_esd_dylib_LDADD = audio_esd.lo 
#audio_esd_dylib_LDFLAGS = $(PLUGINLDFLAGS)
#audio_alsa_dylib_SOURCES = 
#audio_alsa_dylib_LDADD = audio_alsa.lo 
#audio_alsa_dylib_LDFLAGS = $(PLUGINLDFLAGS)
#input_lirc_dylib_SOURCES = 
#input_lirc_dylib_LDADD = input_lirc.lo	 -llirc_client
#input_lirc_dylib_LDFLAGS = $(PLUGINLDFLAGS)
test_testxlt_SOURCES = test/testxlt.c xlat/xltcache.c xlat/xltcache.h
test_testlxpaths_SOURCES = test/testlxpaths.c lxpaths.c
test_testlxpaths_LDADD = -L/opt/homebrew/Cellar/glib/2.84.4/lib -lglib-2.0 -L/opt/homebrew/opt/gettext/lib -lintl 
GENDEC = tools/gendec$(EXEEXT)
GENGLSL = tools/genglsl$(EXEEXT)
GENMACH = tools/genmach$(EXEEXT)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .log .m .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && $(am__rm_f) $$files

clean-binPROGRAMS:
	-$(am__rm_f) $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-$(am__rm_f) $(check_PROGRAMS)
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && $(am__rm_f) $$files

clean-libexecPROGRAMS:
	-$(am__rm_f) $(libexec_PROGRAMS)

clean-noinstPROGRAMS:
	-$(am__rm_f) $(noinst_PROGRAMS)

clean-noinstLIBRARIES:
	-$(am__rm_f) $(noinst_LIBRARIES)
gdrom/$(am__dirstamp):
	@$(MKDIR_P) gdrom
	@: >>gdrom/$(am__dirstamp)
gdrom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gdrom/$(DEPDIR)
	@: >>gdrom/$(DEPDIR)/$(am__dirstamp)
gdrom/ide.$(OBJEXT): gdrom/$(am__dirstamp) \
	gdrom/$(DEPDIR)/$(am__dirstamp)
gdrom/gdrom.$(OBJEXT): gdrom/$(am__dirstamp) \
	gdrom/$(DEPDIR)/$(am__dirstamp)
sh4/$(am__dirstamp):
	@$(MKDIR_P) sh4
	@: >>sh4/$(am__dirstamp)
sh4/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sh4/$(DEPDIR)
	@: >>sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/intc.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4mem.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/timer.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/dmac.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/mmu.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4core.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4dasm.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4mmio.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/scif.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/sh4stat.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
xlat/$(am__dirstamp):
	@$(MKDIR_P) xlat
	@: >>xlat/$(am__dirstamp)
xlat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) xlat/$(DEPDIR)
	@: >>xlat/$(DEPDIR)/$(am__dirstamp)
xlat/xltcache.$(OBJEXT): xlat/$(am__dirstamp) \
	xlat/$(DEPDIR)/$(am__dirstamp)
sh4/pmm.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
sh4/cache.$(OBJEXT): sh4/$(am__dirstamp) sh4/$(DEPDIR)/$(am__dirstamp)
aica/$(am__dirstamp):
	@$(MKDIR_P) aica
	@: >>aica/$(am__dirstamp)
aica/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) aica/$(DEPDIR)
	@: >>aica/$(DEPDIR)/$(am__dirstamp)
aica/armcore.$(OBJEXT): aica/$(am__dirstamp) \
	aica/$(DEPDIR)/$(am__dirstamp)
aica/armdasm.$(OBJEXT): aica/$(am__dirstamp) \
	aica/$(DEPDIR)/$(am__dirstamp)
aica/armmem.$(OBJEXT): aica/$(am__dirstamp) \
	aica/$(DEPDIR)/$(am__dirstamp)
aica/aica.$(OBJEXT): aica/$(am__dirstamp) \
	aica/$(DEPDIR)/$(am__dirstamp)
aica/audio.$(OBJEXT): aica/$(am__dirstamp) \
	aica/$(DEPDIR)/$(am__dirstamp)
pvr2/$(am__dirstamp):
	@$(MKDIR_P) pvr2
	@: >>pvr2/$(am__dirstamp)
pvr2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pvr2/$(DEPDIR)
	@: >>pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/pvr2.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/pvr2mem.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/tacore.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/rendsort.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/texcache.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/yuv.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/rendsave.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/scene.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/glutil.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
pvr2/glrender.$(OBJEXT): pvr2/$(am__dirstamp) \
	pvr2/$(DEPDIR)/$(am__dirstamp)
drivers/$(am__dirstamp):
	@$(MKDIR_P) drivers
	@: >>drivers/$(am__dirstamp)
drivers/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) drivers/$(DEPDIR)
	@: >>drivers/$(DEPDIR)/$(am__dirstamp)
drivers/gl_state.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
maple/$(am__dirstamp):
	@$(MKDIR_P) maple
	@: >>maple/$(am__dirstamp)
maple/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) maple/$(DEPDIR)
	@: >>maple/$(DEPDIR)/$(am__dirstamp)
maple/maple.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
maple/controller.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
maple/kbd.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
maple/mouse.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
maple/lightgun.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
maple/vmu.$(OBJEXT): maple/$(am__dirstamp) \
	maple/$(DEPDIR)/$(am__dirstamp)
vmu/$(am__dirstamp):
	@$(MKDIR_P) vmu
	@: >>vmu/$(am__dirstamp)
vmu/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) vmu/$(DEPDIR)
	@: >>vmu/$(DEPDIR)/$(am__dirstamp)
vmu/vmuvol.$(OBJEXT): vmu/$(am__dirstamp) \
	vmu/$(DEPDIR)/$(am__dirstamp)
vmu/vmulist.$(OBJEXT): vmu/$(am__dirstamp) \
	vmu/$(DEPDIR)/$(am__dirstamp)
drivers/audio_null.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/video_null.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/video_gl.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/gl_fbo.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/gl_vbo.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/gl_sl.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/serial_unix.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/$(am__dirstamp):
	@$(MKDIR_P) drivers/cdrom
	@: >>drivers/cdrom/$(am__dirstamp)
drivers/cdrom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) drivers/cdrom/$(DEPDIR)
	@: >>drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cdrom.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/sector.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_nrg.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_cdi.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_gdi.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/edc_ecc.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/drive.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_mmc.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/isofs.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/isomem.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
sh4/sh4x86.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
xlat/xlatdasm.$(OBJEXT): xlat/$(am__dirstamp) \
	xlat/$(DEPDIR)/$(am__dirstamp)
sh4/sh4trans.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/mmux86.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
sh4/shadow.$(OBJEXT): sh4/$(am__dirstamp) \
	sh4/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/$(am__dirstamp):
	@$(MKDIR_P) xlat/disasm
	@: >>xlat/disasm/$(am__dirstamp)
xlat/disasm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) xlat/disasm/$(DEPDIR)
	@: >>xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/i386-dis.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/dis-init.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/dis-buf.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/arm-dis.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/floatformat.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
xlat/disasm/safe-ctype.$(OBJEXT): xlat/disasm/$(am__dirstamp) \
	xlat/disasm/$(DEPDIR)/$(am__dirstamp)
cocoaui/$(am__dirstamp):
	@$(MKDIR_P) cocoaui
	@: >>cocoaui/$(am__dirstamp)
cocoaui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cocoaui/$(DEPDIR)
	@: >>cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/paths_osx.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
drivers/io_osx.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/io_glib.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)

liblxdream-core.a: $(liblxdream_core_a_OBJECTS) $(liblxdream_core_a_DEPENDENCIES) $(EXTRA_liblxdream_core_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f liblxdream-core.a
	$(AM_V_AR)$(liblxdream_core_a_AR) liblxdream-core.a $(liblxdream_core_a_OBJECTS) $(liblxdream_core_a_LIBADD)
	$(AM_V_at)$(liblxdream_core_a_RANLIB) liblxdream-core.a

audio_alsa.dylib$(EXEEXT): $(audio_alsa_dylib_OBJECTS) $(audio_alsa_dylib_DEPENDENCIES) $(EXTRA_audio_alsa_dylib_DEPENDENCIES) 
	@rm -f audio_alsa.dylib$(EXEEXT)
	$(AM_V_CCLD)$(audio_alsa_dylib_LINK) $(audio_alsa_dylib_OBJECTS) $(audio_alsa_dylib_LDADD) $(LIBS)

audio_esd.dylib$(EXEEXT): $(audio_esd_dylib_OBJECTS) $(audio_esd_dylib_DEPENDENCIES) $(EXTRA_audio_esd_dylib_DEPENDENCIES) 
	@rm -f audio_esd.dylib$(EXEEXT)
	$(AM_V_CCLD)$(audio_esd_dylib_LINK) $(audio_esd_dylib_OBJECTS) $(audio_esd_dylib_LDADD) $(LIBS)

audio_pulse.dylib$(EXEEXT): $(audio_pulse_dylib_OBJECTS) $(audio_pulse_dylib_DEPENDENCIES) $(EXTRA_audio_pulse_dylib_DEPENDENCIES) 
	@rm -f audio_pulse.dylib$(EXEEXT)
	$(AM_V_CCLD)$(audio_pulse_dylib_LINK) $(audio_pulse_dylib_OBJECTS) $(audio_pulse_dylib_LDADD) $(LIBS)

audio_sdl.dylib$(EXEEXT): $(audio_sdl_dylib_OBJECTS) $(audio_sdl_dylib_DEPENDENCIES) $(EXTRA_audio_sdl_dylib_DEPENDENCIES) 
	@rm -f audio_sdl.dylib$(EXEEXT)
	$(AM_V_CCLD)$(audio_sdl_dylib_LINK) $(audio_sdl_dylib_OBJECTS) $(audio_sdl_dylib_LDADD) $(LIBS)

input_lirc.dylib$(EXEEXT): $(input_lirc_dylib_OBJECTS) $(input_lirc_dylib_DEPENDENCIES) $(EXTRA_input_lirc_dylib_DEPENDENCIES) 
	@rm -f input_lirc.dylib$(EXEEXT)
	$(AM_V_CCLD)$(input_lirc_dylib_LINK) $(input_lirc_dylib_OBJECTS) $(input_lirc_dylib_LDADD) $(LIBS)
drivers/cdrom/cd_none.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/video_egl.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)

liblxdream.so$(EXEEXT): $(liblxdream_so_OBJECTS) $(liblxdream_so_DEPENDENCIES) $(EXTRA_liblxdream_so_DEPENDENCIES) 
	@rm -f liblxdream.so$(EXEEXT)
	$(AM_V_GEN)$(liblxdream_so_LINK) $(liblxdream_so_OBJECTS) $(liblxdream_so_LDADD) $(LIBS)
gtkui/$(am__dirstamp):
	@$(MKDIR_P) gtkui
	@: >>gtkui/$(am__dirstamp)
gtkui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gtkui/$(DEPDIR)
	@: >>gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtkui.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_win.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtkcb.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_cfg.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_mmio.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_debug.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_dump.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_ctrl.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
gtkui/gtk_gd.$(OBJEXT): gtkui/$(am__dirstamp) \
	gtkui/$(DEPDIR)/$(am__dirstamp)
drivers/video_gtk.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoaui.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoa_cfg.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoa_win.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoa_gd.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoa_prefs.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
cocoaui/cocoa_ctrl.$(OBJEXT): cocoaui/$(am__dirstamp) \
	cocoaui/$(DEPDIR)/$(am__dirstamp)
drivers/video_osx.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/gc_osx.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/video_gdk.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/video_glx.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/video_nsgl.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/audio_osx.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/audio_sdl.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/audio_pulse.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/audio_esd.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/audio_alsa.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/input_lirc.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_linux.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/cdrom/cd_osx.$(OBJEXT): drivers/cdrom/$(am__dirstamp) \
	drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
drivers/osx_iokit.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)
drivers/joy_linux.$(OBJEXT): drivers/$(am__dirstamp) \
	drivers/$(DEPDIR)/$(am__dirstamp)

lxdream$(EXEEXT): $(lxdream_OBJECTS) $(lxdream_DEPENDENCIES) $(EXTRA_lxdream_DEPENDENCIES) 
	@rm -f lxdream$(EXEEXT)
	$(AM_V_GEN)$(lxdream_LINK) $(lxdream_OBJECTS) $(lxdream_LDADD) $(LIBS)

lxdream_dummy.dylib$(EXEEXT): $(lxdream_dummy_dylib_OBJECTS) $(lxdream_dummy_dylib_DEPENDENCIES) $(EXTRA_lxdream_dummy_dylib_DEPENDENCIES) 
	@rm -f lxdream_dummy.dylib$(EXEEXT)
	$(AM_V_CCLD)$(lxdream_dummy_dylib_LINK) $(lxdream_dummy_dylib_OBJECTS) $(lxdream_dummy_dylib_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: >>test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: >>test/$(DEPDIR)/$(am__dirstamp)
test/testlxpaths.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/testlxpaths$(EXEEXT): $(test_testlxpaths_OBJECTS) $(test_testlxpaths_DEPENDENCIES) $(EXTRA_test_testlxpaths_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/testlxpaths$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_testlxpaths_OBJECTS) $(test_testlxpaths_LDADD) $(LIBS)
test/testsh4x86.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/testsh4x86$(EXEEXT): $(test_testsh4x86_OBJECTS) $(test_testsh4x86_DEPENDENCIES) $(EXTRA_test_testsh4x86_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/testsh4x86$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_testsh4x86_OBJECTS) $(test_testsh4x86_LDADD) $(LIBS)
test/testxlt.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/testxlt$(EXEEXT): $(test_testxlt_OBJECTS) $(test_testxlt_DEPENDENCIES) $(EXTRA_test_testxlt_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/testxlt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_testxlt_OBJECTS) $(test_testxlt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f aica/*.$(OBJEXT)
	-rm -f cocoaui/*.$(OBJEXT)
	-rm -f drivers/*.$(OBJEXT)
	-rm -f drivers/cdrom/*.$(OBJEXT)
	-rm -f gdrom/*.$(OBJEXT)
	-rm -f gtkui/*.$(OBJEXT)
	-rm -f maple/*.$(OBJEXT)
	-rm -f pvr2/*.$(OBJEXT)
	-rm -f sh4/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)
	-rm -f vmu/*.$(OBJEXT)
	-rm -f xlat/*.$(OBJEXT)
	-rm -f xlat/disasm/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/asic.Po # am--include-marker
include ./$(DEPDIR)/bios.Po # am--include-marker
include ./$(DEPDIR)/bootstrap.Po # am--include-marker
include ./$(DEPDIR)/config.Po # am--include-marker
include ./$(DEPDIR)/cpu.Po # am--include-marker
include ./$(DEPDIR)/dcload.Po # am--include-marker
include ./$(DEPDIR)/display.Po # am--include-marker
include ./$(DEPDIR)/dreamcast.Po # am--include-marker
include ./$(DEPDIR)/eventq.Po # am--include-marker
include ./$(DEPDIR)/gdbserver.Po # am--include-marker
include ./$(DEPDIR)/gdlist.Po # am--include-marker
include ./$(DEPDIR)/gui_android.Po # am--include-marker
include ./$(DEPDIR)/gui_none.Po # am--include-marker
include ./$(DEPDIR)/hotkeys.Po # am--include-marker
include ./$(DEPDIR)/ioutil.Po # am--include-marker
include ./$(DEPDIR)/loader.Po # am--include-marker
include ./$(DEPDIR)/lxpaths.Po # am--include-marker
include ./$(DEPDIR)/main.Po # am--include-marker
include ./$(DEPDIR)/mem.Po # am--include-marker
include ./$(DEPDIR)/paths_unix.Po # am--include-marker
include ./$(DEPDIR)/plugin.Po # am--include-marker
include ./$(DEPDIR)/profiler.Po # am--include-marker
include ./$(DEPDIR)/sdram.Po # am--include-marker
include ./$(DEPDIR)/syscall.Po # am--include-marker
include ./$(DEPDIR)/tqueue.Po # am--include-marker
include ./$(DEPDIR)/util.Po # am--include-marker
include ./$(DEPDIR)/version.Po # am--include-marker
include ./$(DEPDIR)/watch.Po # am--include-marker
include aica/$(DEPDIR)/aica.Po # am--include-marker
include aica/$(DEPDIR)/armcore.Po # am--include-marker
include aica/$(DEPDIR)/armdasm.Po # am--include-marker
include aica/$(DEPDIR)/armmem.Po # am--include-marker
include aica/$(DEPDIR)/audio.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoa_cfg.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoa_ctrl.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoa_gd.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoa_prefs.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoa_win.Po # am--include-marker
include cocoaui/$(DEPDIR)/cocoaui.Po # am--include-marker
include cocoaui/$(DEPDIR)/paths_osx.Po # am--include-marker
include drivers/$(DEPDIR)/audio_alsa.Po # am--include-marker
include drivers/$(DEPDIR)/audio_esd.Po # am--include-marker
include drivers/$(DEPDIR)/audio_null.Po # am--include-marker
include drivers/$(DEPDIR)/audio_osx.Po # am--include-marker
include drivers/$(DEPDIR)/audio_pulse.Po # am--include-marker
include drivers/$(DEPDIR)/audio_sdl.Po # am--include-marker
include drivers/$(DEPDIR)/gc_osx.Po # am--include-marker
include drivers/$(DEPDIR)/gl_fbo.Po # am--include-marker
include drivers/$(DEPDIR)/gl_sl.Po # am--include-marker
include drivers/$(DEPDIR)/gl_state.Po # am--include-marker
include drivers/$(DEPDIR)/gl_vbo.Po # am--include-marker
include drivers/$(DEPDIR)/input_lirc.Po # am--include-marker
include drivers/$(DEPDIR)/io_glib.Po # am--include-marker
include drivers/$(DEPDIR)/io_osx.Po # am--include-marker
include drivers/$(DEPDIR)/joy_linux.Po # am--include-marker
include drivers/$(DEPDIR)/osx_iokit.Po # am--include-marker
include drivers/$(DEPDIR)/serial_unix.Po # am--include-marker
include drivers/$(DEPDIR)/video_egl.Po # am--include-marker
include drivers/$(DEPDIR)/video_gdk.Po # am--include-marker
include drivers/$(DEPDIR)/video_gl.Po # am--include-marker
include drivers/$(DEPDIR)/video_glx.Po # am--include-marker
include drivers/$(DEPDIR)/video_gtk.Po # am--include-marker
include drivers/$(DEPDIR)/video_nsgl.Po # am--include-marker
include drivers/$(DEPDIR)/video_null.Po # am--include-marker
include drivers/$(DEPDIR)/video_osx.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_cdi.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_gdi.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_linux.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_mmc.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_none.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_nrg.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cd_osx.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/cdrom.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/drive.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/edc_ecc.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/isofs.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/isomem.Po # am--include-marker
include drivers/cdrom/$(DEPDIR)/sector.Po # am--include-marker
include gdrom/$(DEPDIR)/gdrom.Po # am--include-marker
include gdrom/$(DEPDIR)/ide.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_cfg.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_ctrl.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_debug.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_dump.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_gd.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_mmio.Po # am--include-marker
include gtkui/$(DEPDIR)/gtk_win.Po # am--include-marker
include gtkui/$(DEPDIR)/gtkcb.Po # am--include-marker
include gtkui/$(DEPDIR)/gtkui.Po # am--include-marker
include maple/$(DEPDIR)/controller.Po # am--include-marker
include maple/$(DEPDIR)/kbd.Po # am--include-marker
include maple/$(DEPDIR)/lightgun.Po # am--include-marker
include maple/$(DEPDIR)/maple.Po # am--include-marker
include maple/$(DEPDIR)/mouse.Po # am--include-marker
include maple/$(DEPDIR)/vmu.Po # am--include-marker
include pvr2/$(DEPDIR)/glrender.Po # am--include-marker
include pvr2/$(DEPDIR)/glutil.Po # am--include-marker
include pvr2/$(DEPDIR)/pvr2.Po # am--include-marker
include pvr2/$(DEPDIR)/pvr2mem.Po # am--include-marker
include pvr2/$(DEPDIR)/rendsave.Po # am--include-marker
include pvr2/$(DEPDIR)/rendsort.Po # am--include-marker
include pvr2/$(DEPDIR)/scene.Po # am--include-marker
include pvr2/$(DEPDIR)/tacore.Po # am--include-marker
include pvr2/$(DEPDIR)/texcache.Po # am--include-marker
include pvr2/$(DEPDIR)/yuv.Po # am--include-marker
include sh4/$(DEPDIR)/cache.Po # am--include-marker
include sh4/$(DEPDIR)/dmac.Po # am--include-marker
include sh4/$(DEPDIR)/intc.Po # am--include-marker
include sh4/$(DEPDIR)/mmu.Po # am--include-marker
include sh4/$(DEPDIR)/mmux86.Po # am--include-marker
include sh4/$(DEPDIR)/pmm.Po # am--include-marker
include sh4/$(DEPDIR)/scif.Po # am--include-marker
include sh4/$(DEPDIR)/sh4.Po # am--include-marker
include sh4/$(DEPDIR)/sh4core.Po # am--include-marker
include sh4/$(DEPDIR)/sh4dasm.Po # am--include-marker
include sh4/$(DEPDIR)/sh4mem.Po # am--include-marker
include sh4/$(DEPDIR)/sh4mmio.Po # am--include-marker
include sh4/$(DEPDIR)/sh4stat.Po # am--include-marker
include sh4/$(DEPDIR)/sh4trans.Po # am--include-marker
include sh4/$(DEPDIR)/sh4x86.Po # am--include-marker
include sh4/$(DEPDIR)/shadow.Po # am--include-marker
include sh4/$(DEPDIR)/timer.Po # am--include-marker
include test/$(DEPDIR)/testlxpaths.Po # am--include-marker
include test/$(DEPDIR)/testsh4x86.Po # am--include-marker
include test/$(DEPDIR)/testxlt.Po # am--include-marker
include vmu/$(DEPDIR)/vmulist.Po # am--include-marker
include vmu/$(DEPDIR)/vmuvol.Po # am--include-marker
include xlat/$(DEPDIR)/xlatdasm.Po # am--include-marker
include xlat/$(DEPDIR)/xltcache.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/arm-dis.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/dis-buf.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/dis-init.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/floatformat.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/i386-dis.Po # am--include-marker
include xlat/disasm/$(DEPDIR)/safe-ctype.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@: >>$@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.o:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:
$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	output_system_information () \
	{ \
          echo;                                     \
	  { uname -a | $(AWK) '{                    \
  printf "System information (uname -a):";          \
  for (i = 1; i < NF; ++i)                          \
    {                                               \
      if (i != 2)                                   \
        printf " %s", $$i;                          \
    }                                               \
  printf "\n";                                      \
}'; } 2>&1;                                         \
	  if test -r /etc/os-release; then          \
	    echo "Distribution information (/etc/os-release):"; \
	    sed 8q /etc/os-release;                 \
	  elif test -r /etc/issue; then             \
	    echo "Distribution information (/etc/issue):";      \
	    cat /etc/issue;                         \
	  fi;                                       \
	}; \
	please_report () \
	{ \
echo "Some test(s) failed.  Please report this to $(PACKAGE_BUGREPORT),";    \
echo "together with the test-suite.log file (gzipped) and your system";      \
echo "information.  Thanks.";                                                \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  output_system_information;                                    \
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG) for debugging.$${std}";\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    please_report | sed -e "s/^/$${col}/" -e s/'$$'/"$${std}"/; \
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@$(am__rm_f) $(RECHECK_LOGS)
	@$(am__rm_f) $(RECHECK_LOGS:.log=.trs)
	@$(am__rm_f) $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@$(am__rm_f) $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/testxlt.log: test/testxlt$(EXEEXT)
	@p='test/testxlt$(EXEEXT)'; \
	b='test/testxlt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/testlxpaths.log: test/testlxpaths$(EXEEXT)
	@p='test/testlxpaths$(EXEEXT)'; \
	b='test/testlxpaths'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-$(am__rm_f) $(TEST_LOGS)
	-$(am__rm_f) $(TEST_LOGS:.log=.trs)
	-$(am__rm_f) $(TEST_SUITE_LOG)

clean-generic:
	-$(am__rm_f) $(CLEANFILES)

distclean-generic:
	-$(am__rm_f) $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || $(am__rm_f) $(CONFIG_CLEAN_VPATH_FILES)
	-$(am__rm_f) aica/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) aica/$(am__dirstamp)
	-$(am__rm_f) cocoaui/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) cocoaui/$(am__dirstamp)
	-$(am__rm_f) drivers/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) drivers/$(am__dirstamp)
	-$(am__rm_f) drivers/cdrom/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) drivers/cdrom/$(am__dirstamp)
	-$(am__rm_f) gdrom/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) gdrom/$(am__dirstamp)
	-$(am__rm_f) gtkui/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) gtkui/$(am__dirstamp)
	-$(am__rm_f) maple/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) maple/$(am__dirstamp)
	-$(am__rm_f) pvr2/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) pvr2/$(am__dirstamp)
	-$(am__rm_f) sh4/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) sh4/$(am__dirstamp)
	-$(am__rm_f) test/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) test/$(am__dirstamp)
	-$(am__rm_f) vmu/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) vmu/$(am__dirstamp)
	-$(am__rm_f) xlat/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) xlat/$(am__dirstamp)
	-$(am__rm_f) xlat/disasm/$(DEPDIR)/$(am__dirstamp)
	-$(am__rm_f) xlat/disasm/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-$(am__rm_f) $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libexecPROGRAMS clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f ./$(DEPDIR)/asic.Po
	-rm -f ./$(DEPDIR)/bios.Po
	-rm -f ./$(DEPDIR)/bootstrap.Po
	-rm -f ./$(DEPDIR)/config.Po
	-rm -f ./$(DEPDIR)/cpu.Po
	-rm -f ./$(DEPDIR)/dcload.Po
	-rm -f ./$(DEPDIR)/display.Po
	-rm -f ./$(DEPDIR)/dreamcast.Po
	-rm -f ./$(DEPDIR)/eventq.Po
	-rm -f ./$(DEPDIR)/gdbserver.Po
	-rm -f ./$(DEPDIR)/gdlist.Po
	-rm -f ./$(DEPDIR)/gui_android.Po
	-rm -f ./$(DEPDIR)/gui_none.Po
	-rm -f ./$(DEPDIR)/hotkeys.Po
	-rm -f ./$(DEPDIR)/ioutil.Po
	-rm -f ./$(DEPDIR)/loader.Po
	-rm -f ./$(DEPDIR)/lxpaths.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/mem.Po
	-rm -f ./$(DEPDIR)/paths_unix.Po
	-rm -f ./$(DEPDIR)/plugin.Po
	-rm -f ./$(DEPDIR)/profiler.Po
	-rm -f ./$(DEPDIR)/sdram.Po
	-rm -f ./$(DEPDIR)/syscall.Po
	-rm -f ./$(DEPDIR)/tqueue.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/watch.Po
	-rm -f aica/$(DEPDIR)/aica.Po
	-rm -f aica/$(DEPDIR)/armcore.Po
	-rm -f aica/$(DEPDIR)/armdasm.Po
	-rm -f aica/$(DEPDIR)/armmem.Po
	-rm -f aica/$(DEPDIR)/audio.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_cfg.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_ctrl.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_gd.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_prefs.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_win.Po
	-rm -f cocoaui/$(DEPDIR)/cocoaui.Po
	-rm -f cocoaui/$(DEPDIR)/paths_osx.Po
	-rm -f drivers/$(DEPDIR)/audio_alsa.Po
	-rm -f drivers/$(DEPDIR)/audio_esd.Po
	-rm -f drivers/$(DEPDIR)/audio_null.Po
	-rm -f drivers/$(DEPDIR)/audio_osx.Po
	-rm -f drivers/$(DEPDIR)/audio_pulse.Po
	-rm -f drivers/$(DEPDIR)/audio_sdl.Po
	-rm -f drivers/$(DEPDIR)/gc_osx.Po
	-rm -f drivers/$(DEPDIR)/gl_fbo.Po
	-rm -f drivers/$(DEPDIR)/gl_sl.Po
	-rm -f drivers/$(DEPDIR)/gl_state.Po
	-rm -f drivers/$(DEPDIR)/gl_vbo.Po
	-rm -f drivers/$(DEPDIR)/input_lirc.Po
	-rm -f drivers/$(DEPDIR)/io_glib.Po
	-rm -f drivers/$(DEPDIR)/io_osx.Po
	-rm -f drivers/$(DEPDIR)/joy_linux.Po
	-rm -f drivers/$(DEPDIR)/osx_iokit.Po
	-rm -f drivers/$(DEPDIR)/serial_unix.Po
	-rm -f drivers/$(DEPDIR)/video_egl.Po
	-rm -f drivers/$(DEPDIR)/video_gdk.Po
	-rm -f drivers/$(DEPDIR)/video_gl.Po
	-rm -f drivers/$(DEPDIR)/video_glx.Po
	-rm -f drivers/$(DEPDIR)/video_gtk.Po
	-rm -f drivers/$(DEPDIR)/video_nsgl.Po
	-rm -f drivers/$(DEPDIR)/video_null.Po
	-rm -f drivers/$(DEPDIR)/video_osx.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_cdi.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_gdi.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_linux.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_mmc.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_none.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_nrg.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_osx.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cdrom.Po
	-rm -f drivers/cdrom/$(DEPDIR)/drive.Po
	-rm -f drivers/cdrom/$(DEPDIR)/edc_ecc.Po
	-rm -f drivers/cdrom/$(DEPDIR)/isofs.Po
	-rm -f drivers/cdrom/$(DEPDIR)/isomem.Po
	-rm -f drivers/cdrom/$(DEPDIR)/sector.Po
	-rm -f gdrom/$(DEPDIR)/gdrom.Po
	-rm -f gdrom/$(DEPDIR)/ide.Po
	-rm -f gtkui/$(DEPDIR)/gtk_cfg.Po
	-rm -f gtkui/$(DEPDIR)/gtk_ctrl.Po
	-rm -f gtkui/$(DEPDIR)/gtk_debug.Po
	-rm -f gtkui/$(DEPDIR)/gtk_dump.Po
	-rm -f gtkui/$(DEPDIR)/gtk_gd.Po
	-rm -f gtkui/$(DEPDIR)/gtk_mmio.Po
	-rm -f gtkui/$(DEPDIR)/gtk_win.Po
	-rm -f gtkui/$(DEPDIR)/gtkcb.Po
	-rm -f gtkui/$(DEPDIR)/gtkui.Po
	-rm -f maple/$(DEPDIR)/controller.Po
	-rm -f maple/$(DEPDIR)/kbd.Po
	-rm -f maple/$(DEPDIR)/lightgun.Po
	-rm -f maple/$(DEPDIR)/maple.Po
	-rm -f maple/$(DEPDIR)/mouse.Po
	-rm -f maple/$(DEPDIR)/vmu.Po
	-rm -f pvr2/$(DEPDIR)/glrender.Po
	-rm -f pvr2/$(DEPDIR)/glutil.Po
	-rm -f pvr2/$(DEPDIR)/pvr2.Po
	-rm -f pvr2/$(DEPDIR)/pvr2mem.Po
	-rm -f pvr2/$(DEPDIR)/rendsave.Po
	-rm -f pvr2/$(DEPDIR)/rendsort.Po
	-rm -f pvr2/$(DEPDIR)/scene.Po
	-rm -f pvr2/$(DEPDIR)/tacore.Po
	-rm -f pvr2/$(DEPDIR)/texcache.Po
	-rm -f pvr2/$(DEPDIR)/yuv.Po
	-rm -f sh4/$(DEPDIR)/cache.Po
	-rm -f sh4/$(DEPDIR)/dmac.Po
	-rm -f sh4/$(DEPDIR)/intc.Po
	-rm -f sh4/$(DEPDIR)/mmu.Po
	-rm -f sh4/$(DEPDIR)/mmux86.Po
	-rm -f sh4/$(DEPDIR)/pmm.Po
	-rm -f sh4/$(DEPDIR)/scif.Po
	-rm -f sh4/$(DEPDIR)/sh4.Po
	-rm -f sh4/$(DEPDIR)/sh4core.Po
	-rm -f sh4/$(DEPDIR)/sh4dasm.Po
	-rm -f sh4/$(DEPDIR)/sh4mem.Po
	-rm -f sh4/$(DEPDIR)/sh4mmio.Po
	-rm -f sh4/$(DEPDIR)/sh4stat.Po
	-rm -f sh4/$(DEPDIR)/sh4trans.Po
	-rm -f sh4/$(DEPDIR)/sh4x86.Po
	-rm -f sh4/$(DEPDIR)/shadow.Po
	-rm -f sh4/$(DEPDIR)/timer.Po
	-rm -f test/$(DEPDIR)/testlxpaths.Po
	-rm -f test/$(DEPDIR)/testsh4x86.Po
	-rm -f test/$(DEPDIR)/testxlt.Po
	-rm -f vmu/$(DEPDIR)/vmulist.Po
	-rm -f vmu/$(DEPDIR)/vmuvol.Po
	-rm -f xlat/$(DEPDIR)/xlatdasm.Po
	-rm -f xlat/$(DEPDIR)/xltcache.Po
	-rm -f xlat/disasm/$(DEPDIR)/arm-dis.Po
	-rm -f xlat/disasm/$(DEPDIR)/dis-buf.Po
	-rm -f xlat/disasm/$(DEPDIR)/dis-init.Po
	-rm -f xlat/disasm/$(DEPDIR)/floatformat.Po
	-rm -f xlat/disasm/$(DEPDIR)/i386-dis.Po
	-rm -f xlat/disasm/$(DEPDIR)/safe-ctype.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libexecPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f ./$(DEPDIR)/asic.Po
	-rm -f ./$(DEPDIR)/bios.Po
	-rm -f ./$(DEPDIR)/bootstrap.Po
	-rm -f ./$(DEPDIR)/config.Po
	-rm -f ./$(DEPDIR)/cpu.Po
	-rm -f ./$(DEPDIR)/dcload.Po
	-rm -f ./$(DEPDIR)/display.Po
	-rm -f ./$(DEPDIR)/dreamcast.Po
	-rm -f ./$(DEPDIR)/eventq.Po
	-rm -f ./$(DEPDIR)/gdbserver.Po
	-rm -f ./$(DEPDIR)/gdlist.Po
	-rm -f ./$(DEPDIR)/gui_android.Po
	-rm -f ./$(DEPDIR)/gui_none.Po
	-rm -f ./$(DEPDIR)/hotkeys.Po
	-rm -f ./$(DEPDIR)/ioutil.Po
	-rm -f ./$(DEPDIR)/loader.Po
	-rm -f ./$(DEPDIR)/lxpaths.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/mem.Po
	-rm -f ./$(DEPDIR)/paths_unix.Po
	-rm -f ./$(DEPDIR)/plugin.Po
	-rm -f ./$(DEPDIR)/profiler.Po
	-rm -f ./$(DEPDIR)/sdram.Po
	-rm -f ./$(DEPDIR)/syscall.Po
	-rm -f ./$(DEPDIR)/tqueue.Po
	-rm -f ./$(DEPDIR)/util.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/watch.Po
	-rm -f aica/$(DEPDIR)/aica.Po
	-rm -f aica/$(DEPDIR)/armcore.Po
	-rm -f aica/$(DEPDIR)/armdasm.Po
	-rm -f aica/$(DEPDIR)/armmem.Po
	-rm -f aica/$(DEPDIR)/audio.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_cfg.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_ctrl.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_gd.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_prefs.Po
	-rm -f cocoaui/$(DEPDIR)/cocoa_win.Po
	-rm -f cocoaui/$(DEPDIR)/cocoaui.Po
	-rm -f cocoaui/$(DEPDIR)/paths_osx.Po
	-rm -f drivers/$(DEPDIR)/audio_alsa.Po
	-rm -f drivers/$(DEPDIR)/audio_esd.Po
	-rm -f drivers/$(DEPDIR)/audio_null.Po
	-rm -f drivers/$(DEPDIR)/audio_osx.Po
	-rm -f drivers/$(DEPDIR)/audio_pulse.Po
	-rm -f drivers/$(DEPDIR)/audio_sdl.Po
	-rm -f drivers/$(DEPDIR)/gc_osx.Po
	-rm -f drivers/$(DEPDIR)/gl_fbo.Po
	-rm -f drivers/$(DEPDIR)/gl_sl.Po
	-rm -f drivers/$(DEPDIR)/gl_state.Po
	-rm -f drivers/$(DEPDIR)/gl_vbo.Po
	-rm -f drivers/$(DEPDIR)/input_lirc.Po
	-rm -f drivers/$(DEPDIR)/io_glib.Po
	-rm -f drivers/$(DEPDIR)/io_osx.Po
	-rm -f drivers/$(DEPDIR)/joy_linux.Po
	-rm -f drivers/$(DEPDIR)/osx_iokit.Po
	-rm -f drivers/$(DEPDIR)/serial_unix.Po
	-rm -f drivers/$(DEPDIR)/video_egl.Po
	-rm -f drivers/$(DEPDIR)/video_gdk.Po
	-rm -f drivers/$(DEPDIR)/video_gl.Po
	-rm -f drivers/$(DEPDIR)/video_glx.Po
	-rm -f drivers/$(DEPDIR)/video_gtk.Po
	-rm -f drivers/$(DEPDIR)/video_nsgl.Po
	-rm -f drivers/$(DEPDIR)/video_null.Po
	-rm -f drivers/$(DEPDIR)/video_osx.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_cdi.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_gdi.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_linux.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_mmc.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_none.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_nrg.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cd_osx.Po
	-rm -f drivers/cdrom/$(DEPDIR)/cdrom.Po
	-rm -f drivers/cdrom/$(DEPDIR)/drive.Po
	-rm -f drivers/cdrom/$(DEPDIR)/edc_ecc.Po
	-rm -f drivers/cdrom/$(DEPDIR)/isofs.Po
	-rm -f drivers/cdrom/$(DEPDIR)/isomem.Po
	-rm -f drivers/cdrom/$(DEPDIR)/sector.Po
	-rm -f gdrom/$(DEPDIR)/gdrom.Po
	-rm -f gdrom/$(DEPDIR)/ide.Po
	-rm -f gtkui/$(DEPDIR)/gtk_cfg.Po
	-rm -f gtkui/$(DEPDIR)/gtk_ctrl.Po
	-rm -f gtkui/$(DEPDIR)/gtk_debug.Po
	-rm -f gtkui/$(DEPDIR)/gtk_dump.Po
	-rm -f gtkui/$(DEPDIR)/gtk_gd.Po
	-rm -f gtkui/$(DEPDIR)/gtk_mmio.Po
	-rm -f gtkui/$(DEPDIR)/gtk_win.Po
	-rm -f gtkui/$(DEPDIR)/gtkcb.Po
	-rm -f gtkui/$(DEPDIR)/gtkui.Po
	-rm -f maple/$(DEPDIR)/controller.Po
	-rm -f maple/$(DEPDIR)/kbd.Po
	-rm -f maple/$(DEPDIR)/lightgun.Po
	-rm -f maple/$(DEPDIR)/maple.Po
	-rm -f maple/$(DEPDIR)/mouse.Po
	-rm -f maple/$(DEPDIR)/vmu.Po
	-rm -f pvr2/$(DEPDIR)/glrender.Po
	-rm -f pvr2/$(DEPDIR)/glutil.Po
	-rm -f pvr2/$(DEPDIR)/pvr2.Po
	-rm -f pvr2/$(DEPDIR)/pvr2mem.Po
	-rm -f pvr2/$(DEPDIR)/rendsave.Po
	-rm -f pvr2/$(DEPDIR)/rendsort.Po
	-rm -f pvr2/$(DEPDIR)/scene.Po
	-rm -f pvr2/$(DEPDIR)/tacore.Po
	-rm -f pvr2/$(DEPDIR)/texcache.Po
	-rm -f pvr2/$(DEPDIR)/yuv.Po
	-rm -f sh4/$(DEPDIR)/cache.Po
	-rm -f sh4/$(DEPDIR)/dmac.Po
	-rm -f sh4/$(DEPDIR)/intc.Po
	-rm -f sh4/$(DEPDIR)/mmu.Po
	-rm -f sh4/$(DEPDIR)/mmux86.Po
	-rm -f sh4/$(DEPDIR)/pmm.Po
	-rm -f sh4/$(DEPDIR)/scif.Po
	-rm -f sh4/$(DEPDIR)/sh4.Po
	-rm -f sh4/$(DEPDIR)/sh4core.Po
	-rm -f sh4/$(DEPDIR)/sh4dasm.Po
	-rm -f sh4/$(DEPDIR)/sh4mem.Po
	-rm -f sh4/$(DEPDIR)/sh4mmio.Po
	-rm -f sh4/$(DEPDIR)/sh4stat.Po
	-rm -f sh4/$(DEPDIR)/sh4trans.Po
	-rm -f sh4/$(DEPDIR)/sh4x86.Po
	-rm -f sh4/$(DEPDIR)/shadow.Po
	-rm -f sh4/$(DEPDIR)/timer.Po
	-rm -f test/$(DEPDIR)/testlxpaths.Po
	-rm -f test/$(DEPDIR)/testsh4x86.Po
	-rm -f test/$(DEPDIR)/testxlt.Po
	-rm -f vmu/$(DEPDIR)/vmulist.Po
	-rm -f vmu/$(DEPDIR)/vmuvol.Po
	-rm -f xlat/$(DEPDIR)/xlatdasm.Po
	-rm -f xlat/$(DEPDIR)/xltcache.Po
	-rm -f xlat/disasm/$(DEPDIR)/arm-dis.Po
	-rm -f xlat/disasm/$(DEPDIR)/dis-buf.Po
	-rm -f xlat/disasm/$(DEPDIR)/dis-init.Po
	-rm -f xlat/disasm/$(DEPDIR)/floatformat.Po
	-rm -f xlat/disasm/$(DEPDIR)/i386-dis.Po
	-rm -f xlat/disasm/$(DEPDIR)/safe-ctype.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libexecPROGRAMS

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-exec install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libexecPROGRAMS clean-noinstLIBRARIES \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libexecPROGRAMS install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libexecPROGRAMS

.PRECIOUS: Makefile


.PHONY: checkversion
checkversion:
	@$(srcdir)/checkver.pl "$(VERSION)" "$(top_srcdir)" version.c

version.c: checkversion
lxdream_dummy.lo: drivers/dummy.c
	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@
#audio_sdl.lo: drivers/audio_sdl.c
#	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@
#audio_pulse.lo: drivers/audio_pulse.c
#	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@
#audio_esd.lo: drivers/audio_esd.c
#	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@
#audio_alsa.lo: drivers/audio_alsa.c
#	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@
#input_lirc.lo: drivers/input_lirc.c
#	$(COMPILE) -DPLUGIN $(PLUGINCFLAGS) -c $< -o $@

$(GENDEC) $(GENGLSL) $(GENMACH):
	$(MAKE) $(AM_MAKEFLAGS) -C tools

sh4/sh4core.c: $(GENDEC) sh4/sh4.def sh4/sh4core.in
	$(mkdir_p) `dirname $@`
	$(GENDEC) $(srcdir)/sh4/sh4.def $(srcdir)/sh4/sh4core.in -o $@
sh4/sh4dasm.c: $(GENDEC) sh4/sh4.def sh4/sh4dasm.in
	$(mkdir_p) `dirname $@`
	$(GENDEC) $(srcdir)/sh4/sh4.def $(srcdir)/sh4/sh4dasm.in -o $@
sh4/sh4x86.c: $(GENDEC) sh4/sh4.def sh4/sh4x86.in
	$(mkdir_p) `dirname $@`
	$(GENDEC) $(srcdir)/sh4/sh4.def $(srcdir)/sh4/sh4x86.in -o $@
sh4/sh4stat.c: $(GENDEC) sh4/sh4.def sh4/sh4stat.in
	$(mkdir_p) `dirname $@`
	$(GENDEC) $(srcdir)/sh4/sh4.def $(srcdir)/sh4/sh4stat.in -o $@
pvr2/shaders.def: $(GENGLSL) pvr2/shaders.glsl
	$(mkdir_p) `dirname $@`
	$(GENGLSL) $(srcdir)/pvr2/shaders.glsl -o $@
pvr2/shaders.h: pvr2/shaders.def
drivers/mac_keymap.h: dckeysyms.h drivers/mac_keymap.txt drivers/genkeymap.pl
	$(mkdir_p) `dirname $@`
	$(srcdir)/drivers/genkeymap.pl mac $(srcdir)/dckeysyms.h $(srcdir)/drivers/mac_keymap.txt $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

# Tell GNU make to disable its built-in pattern rules.
%:: %,v
%:: RCS/%,v
%:: RCS/%
%:: s.%
%:: SCCS/s.%
