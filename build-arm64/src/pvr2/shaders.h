/*
 * This file automatically generated by genglsl from ../../src/pvr2/shaders.glsl
 */
#ifndef lxdream_glsl_H
#define lxdream_glsl_H 1

typedef enum {
    DEFAULT_VERTEX_SHADER,
    DEFAULT_FRAGMENT_SHADER,
    BASIC_VERTEX_SHADER,
    BASIC_FRAGMENT_SHADER,
    UPSCALE_VERTEX_SHADER,
    UPSCALE_FRAGMENT_SHADER,
} shader_id;

#define GLSL_LAST_SHADER UPSCALE_FRAGMENT_SHADER
#define GLSL_NUM_SHADERS 6
#define GLSL_NO_SHADER -1

#define GLSL_VERTEX_SHADER 1
#define GLSL_FRAGMENT_SHADER 2
#define GLSL_NUM_PROGRAMS 3
void glsl_use_pvr2_shader();
void glsl_set_pvr2_shader_view_matrix(GLfloat * value); /* uniform mat4 view_matrix */ 
void glsl_set_pvr2_shader_in_vertex_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_vertex */ 
void glsl_set_pvr2_shader_in_vertex_vec2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_vertex */ 
void glsl_set_pvr2_shader_in_vertex_vec3_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_vertex */ 
void glsl_set_pvr2_shader_in_colour_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_pvr2_shader_in_colour_vec2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_pvr2_shader_in_colour_vec3_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_pvr2_shader_in_colour2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour2 */ 
void glsl_set_pvr2_shader_in_colour2_vec2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour2 */ 
void glsl_set_pvr2_shader_in_colour2_vec3_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour2 */ 
void glsl_set_pvr2_shader_in_texcoord_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_texcoord */ 
void glsl_set_pvr2_shader_in_texcoord_vec2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_texcoord */ 
void glsl_set_pvr2_shader_in_texcoord_vec3_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_texcoord */ 
void glsl_set_pvr2_shader_alpha_ref(float value); /* uniform float alpha_ref */ 
void glsl_set_pvr2_shader_primary_texture(int value); /* uniform sampler2D primary_texture */ 
void glsl_set_pvr2_shader_palette_texture(int value); /* uniform sampler2D palette_texture */ 
void glsl_set_pvr2_shader_fog_colour1(GLfloat * value); /* uniform vec3 fog_colour1 */ 
void glsl_set_pvr2_shader_fog_colour2(GLfloat * value); /* uniform vec3 fog_colour2 */ 
void glsl_use_basic_shader();
void glsl_set_basic_shader_view_matrix(GLfloat * value); /* uniform mat4 view_matrix */ 
void glsl_set_basic_shader_in_vertex_pointer(GLfloat * ptr, GLint stride); /* attribute vec2 in_vertex */ 
void glsl_set_basic_shader_in_colour_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_basic_shader_in_colour_vec2_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_basic_shader_in_colour_vec3_pointer(GLfloat * ptr, GLint stride); /* attribute vec4 in_colour */ 
void glsl_set_basic_shader_in_texcoord_pointer(GLfloat * ptr, GLint stride); /* attribute vec2 in_texcoord */ 
void glsl_set_basic_shader_primary_texture(int value); /* uniform sampler2D primary_texture */ 
void glsl_use_upscale_simple();
void glsl_set_upscale_simple_view_matrix(GLfloat * value); /* uniform mat4 view_matrix */ 
void glsl_set_upscale_simple_in_vertex_pointer(GLfloat * ptr, GLint stride); /* attribute vec2 in_vertex */ 
void glsl_set_upscale_simple_in_texcoord_pointer(GLfloat * ptr, GLint stride); /* attribute vec2 in_texcoord */ 
void glsl_set_upscale_simple_primary_texture(int value); /* uniform sampler2D primary_texture */ 
void glsl_set_upscale_simple_texel_size(GLfloat * value); /* uniform vec2 texel_size */ 
void glsl_set_upscale_simple_sharp(float value); /* uniform float sharp */ 
void glsl_clear_shader();
#endif /* !lxdream_glsl_H */
